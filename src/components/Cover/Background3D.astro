<script>
  import * as THREE from "three";

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
  const renderer = new THREE.WebGLRenderer({ alpha: true });
  const background = document.getElementById("background") as HTMLElement;
  background.appendChild(renderer.domElement);
  renderer.setPixelRatio(window.devicePixelRatio);
  renderer.setSize(window.innerWidth, window.innerHeight);
  renderer.domElement.style.position = "fixed";
  renderer.domElement.style.top = "0";
  renderer.domElement.style.zIndex = "1";
  renderer.domElement.style.pointerEvents = "none";

  const numOfPoints = 1000;
  const vertices = [];

  for (let i = 0; i < numOfPoints; i++) {
    const x = (Math.random() - 0.5) * 250;
    const y = (Math.random() - 0.5) * 350;
    const z = Math.random() * - 250;
    vertices.push(x, y, z);
  }

  const geometry = new THREE.BufferGeometry();
  geometry.setAttribute(
    "position",
    new THREE.Float32BufferAttribute(vertices, 3)
  );

  const textureLoader = new THREE.TextureLoader();
  const texture = textureLoader.load("/textures/circle_05.png");

  const material = new THREE.PointsMaterial({
    alphaMap: texture,
    color: 0x609fff,
    size: 2,
    sizeAttenuation: true,
    depthWrite: false,
    transparent: true,
    alphaTest: 0.001,
    depthTest: false,
  });

  const points = new THREE.Points(geometry, material);
  scene.add(points);

  window.addEventListener("scroll", () => {
    camera.position.y = -window.scrollY * 0.04;
  });

  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
  animate();
</script>
