---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Javier GarcÃ­a's portfolio" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <meta name="theme-color" content="rgb(251, 251, 254)">

    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Onest:wght@100..900&display=swap");
      @import url("https://fonts.googleapis.com/css2?family=Borel&display=swap");
    </style>
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<script>
  const meta = document.querySelector('meta[name="theme-color"]') as HTMLMetaElement;
  
  document.getElementById("moon")?.addEventListener("click", () => {
    const backgroundColor = window.getComputedStyle(document.body).backgroundColor;
    if (backgroundColor == "rgb(251, 251, 254)") {
      meta.setAttribute("content", "rgba(31, 37, 51)");
    } else {
      meta.setAttribute("content", "rgb(251, 251, 254)");
    }
    console.log(meta.content)
  });
</script>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }

  html, body {
    font-family: system-ui, sans-serif;
    background: radial-gradient(
      circle,
      rgb(218, 218, 218) 1%, 
      rgba(251, 251, 254, 1) 99%
    );
    background-color: rgb(251, 251, 254);
    background-attachment: fixed;
    color: black;
    font-family: "Onest", sans-serif;
    transition: background-color 0.5s;
  }

  .dark-mode {
    background: radial-gradient(
      circle,
      rgba(0, 0, 0, 1) 1%,
      rgba(31, 37, 51, 1) 99%
    );
    background-color: rgba(31, 37, 51);
    background-attachment: fixed;
    color: white;

  }

  ::-webkit-scrollbar {
    width: 7px;
  }

  ::-webkit-scrollbar-thumb {
    background-color: rgba(31, 37, 51, 1);
  }

  .title {
    color: #609fff;
    padding-left: 25%;
    padding-bottom: 0.5rem;
    text-align: left;
  }

  main {
    z-index: 1000;
  }

  @media only screen and (max-width: 600px) {
    .title {
      padding-left: 5%;
    }

    .content {
      padding-left: 5%;
      padding-right: 5%;
      justify-content: start;
    }
  }
</style>
